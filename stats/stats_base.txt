    # parameters
    enum_max = 8
    max_TTL = 50  # seconds

    random_const_amount = 50
    random_const_min = -5
    random_const_max = 5

    generation = 50
    max_depth = 8
    population_size = 50

    mutation_rate = 0.25
    crossover_rate = 0.25

    best_ind_file = "best_ind_base.txt"
    population_file = "population_base.txt"
    # -----------

    def __init__(self,space,ground_y,fps,end_generation=0, end_evolution=0):

        self.space = space
        self.ground_y = ground_y
        self.fps = fps
        #-----------
        assert Evolution.max_depth > 2
        assert Evolution.population_size > 0

        Evolution.enum_max = max(OperatorGP)

        match end_generation:
            case 0:
                self.if_end_generation = self.reached_time_limit
            case _:
                self.if_end_generation = self.reached_time_limit

        match end_evolution:
            case 0:
                self.if_end_evolution = self.reached_generation_limit
            case _:
                self.if_end_evolution = self.reached_generation_limit

        self.best_brain = ""
        self.best_fitness = 0
        self.best_size = pow(2, Evolution.max_depth)
        self.best_depth = Evolution.max_depth

        self.general_stagnation_constraint = 5
        self.general_stagnation_epsilon = 50
        self.general_stagnation_count = -1

        self.anomaly_contraint = 1000
        self.left_anomaly_contraint = -100

        self.random_consts = [random.random() * (Evolution.random_const_max - Evolution.random_const_min) + Evolution.random_const_min for _ in range(Evolution.random_const_amount)]

        self.population = [self.create_random_individual() for _ in range(Evolution.population_size)]

        self.generation = 1
        self.generation_timer = 0
        #---

        self.mutation_min_depth = 2
        self.mutation_max_depth = Evolution.max_depth - self.mutation_min_depth

        self.crossover_min_depth = 2
        self.crossover_max_depth = Evolution.max_depth - self.crossover_min_depth